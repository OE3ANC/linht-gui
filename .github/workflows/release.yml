name: Cross Compile Rust

permissions:
  contents: write

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target:
          - aarch64-unknown-linux-gnu

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust toolchain and cross
        run: |
          rustup target add ${{ matrix.target }}
          cargo install cross

      - name: Cross-compile with cross
        run: cross build --target ${{ matrix.target }} --release

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: linht-gui-${{ matrix.target }}
          path: |
            target/${{ matrix.target }}/release/
            flowgraph/
            fonts/

  create_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: linht-gui-aarch64-unknown-linux-gnu
          path: ./artifact

      - name: Create ZIP archive
        run: |
          cd artifact
          zip -r linht-gui-package.zip \
            target/aarch64-unknown-linux-gnu/release/linht-gui \
            flowgraph fonts

      - name: Create TAR.GZ archive
        run: |
          cd artifact
          tar czf linht-gui-package.tar.gz \
            target/aarch64-unknown-linux-gnu/release/linht-gui \
            flowgraph fonts

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ github.run_number }}
          release_name: Release ${{ github.run_number }}
          draft: false
          prerelease: false

      - name: Upload ZIP archive to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/linht-gui-package.zip
          asset_name: linht-gui-package.zip
          asset_content_type: application/zip

      - name: Upload TAR.GZ archive to release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./artifact/linht-gui-package.tar.gz
          asset_name: linht-gui-package.tar.gz
          asset_content_type: application/gzip
